<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>✨五分钟从零搭建自己的图床</title>
    <url>/article/PicX/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>在洛谷，拥有洛谷图床。但是，洛谷图床有些时候对用户名颜色、文件大小等有要求。于是，小编今天教你<strong>不用代码</strong>，五分钟搭建一个属于自己的个人图床。</p>
<h3 id="PicX"><a href="#PicX" class="headerlink" title="PicX"></a>PicX</h3><p>?️ PicX 是一款基于 GitHub API 开发的图床工具，提供图片上传托管、生成图片链接和常用图片工具箱服务。</p>
<p>? 建议将本站添加到浏览器收藏夹，方便下次使用。 快捷键：Ctrl + D</p>
<p>? 作者：@<a href="https://xpoet.cn/">XPoet</a></p>
<p>? 仓库：<a href="https://github.com/XPoet/picx">https://github.com/XPoet/picx</a></p>
<p>? 文档：<a href="https://picx-docs.xpoet.cn">https://picx-docs.xpoet.cn</a></p>
<h3 id="前置要求"><a href="#前置要求" class="headerlink" title="前置要求"></a>前置要求</h3><ul>
<li>拥有一个 Github 账号，没有可以<a href="https://docs.github.com/zh/get-started/start-your-journey/creating-an-account-on-github">注册</a>。</li>
</ul>
<h3 id="新建存储库"><a href="#新建存储库" class="headerlink" title="新建存储库"></a>新建存储库</h3><ol>
<li>打开<a href="https://github.com/zhao2022-Ux?tab=repositories">个人存储库</a>，点击 $\tt{\color{green} New}$，转到新建页面。</li>
<li>创建一个新项目，如下图所示：<br><img src="https://cdn.zhaohonghao-qwq.com/img/img无标1题.1hs3bvxs1u.png" alt=""></li>
</ol>
<h3 id="初始化-PicX"><a href="#初始化-PicX" class="headerlink" title="初始化 PicX"></a>初始化 PicX</h3><ul>
<li><p>使用 OAuth。</p>
<blockquote>
<ol>
<li>打开官网<a href="https://picx.xpoet.cn/#/">https://picx.xpoet.cn/#/</a>，单击<strong>使用 GitHub OAuth 授权登录</strong>。</li>
<li>按照 Github 给出的指示一步一步下去。</li>
<li>进入<a href="https://picx.xpoet.cn/#/config">图床配置</a> 填写用户名，项目名称，目录等，就好了。</li>
</ol>
</blockquote>
</li>
<li><p>使用 Token。</p>
<blockquote>
<ol>
<li>打开官网<a href="https://picx.xpoet.cn/#/">https://picx.xpoet.cn/#/</a>，单击<strong>填写 GitHub Token 登录</strong>。</li>
<li>打开 Github 新建 Token，见<a href="https://www.bilibili.com/video/BV1QzhUebEHi/?zw&amp;spm_id_from=888.80996.embed_old&amp;vd_source=6a0b71a226325dba546e5d6dd9e9c7d0">视频</a>。</li>
</ol>
<ul>
<li>⚠️<strong>Token 只会在创建后出现一次，刷新就没了，请自己截图保存。</strong></li>
</ul>
<ol>
<li>将 Token 输入即可绑定。</li>
</ol>
</blockquote>
</li>
</ul>
<h3 id="上传图片"><a href="#上传图片" class="headerlink" title="上传图片"></a>上传图片</h3><ul>
<li>按照平时使用洛谷图床的步骤使用即可。</li>
<li>点击 <strong>复制链接</strong> 即可获取图片链接。</li>
</ul>
<h2 id="自定义域名（可选）"><a href="#自定义域名（可选）" class="headerlink" title="自定义域名（可选）"></a>自定义域名（可选）</h2><p>有些人不喜欢 GithubUserName.github.io 这个域名，那么就自己买一个域名用来绑定图床，比如 cdn.luogu.com.cn。</p>
<h3 id="将网站部署至-Vercel"><a href="#将网站部署至-Vercel" class="headerlink" title="将网站部署至 Vercel"></a>将网站部署至 Vercel</h3><ol>
<li>打开 <a href="vercel.com">Vercel</a>，登录账号，没有可以注册。</li>
<li>点击 $\tt{Add New}$ $\dots$，选择 Project。</li>
<li>找到 Import Git Repository，将图床的 Github 项目名找到，点击 Import，找不到可以搜索。</li>
<li>按照指南一步一步下去，最后完成会出现烟花界面。</li>
</ol>
<h3 id="绑定域名"><a href="#绑定域名" class="headerlink" title="绑定域名"></a>绑定域名</h3><ol>
<li>打开自己的域名运营商，找到域名解析控制台。</li>
<li>添加 <code>CHEAM</code> 类型的域名解析，值为 <code>cname.vercel-dns.com</code>（在项目已经部署至 Vercel 的情况下）。</li>
<li>打开 Vercel，找到项目，点击 Settings，找到 domain，在里面输入域名。<br><img src="https://cdn.zhaohonghao-qwq.com/img/无标题.7ax1mek27a.webp" alt=""></li>
</ol>
<p>最后稍等一会，域名绑定成功。</p>
<h3 id="更改路径"><a href="#更改路径" class="headerlink" title="更改路径"></a>更改路径</h3><ol>
<li>打开 <a href="https://picx.xpoet.cn/#/">https://picx.xpoet.cn/#/</a>，右侧找到设置，下拉找到图片链接规则配置。</li>
<li>将 GitHub Pages 的链接规则改为 <code>https://自定义域名/&#123;&#123;path&#125;&#125;</code>，出现警告，不用管它。</li>
<li>将数据同步到云端仓库。<br><img src="https://cdn.zhaohonghao-qwq.com/img/屏幕截图-2024-07-07-173856.2vemh5ijie.webp" alt=""></li>
<li>完成配置，可以自己测试，剩下功能自己探索。</li>
</ol>
<h3 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h3><ul>
<li><strong>请勿使用 PicX 上传违反你当地法律的图片，所造成的一切后果与作者无关。</strong></li>
<li>每次更改设置后或上传图片后，要更新至云端。</li>
<li><strong>Github Token 只会在创建后出现一次，刷新就没了，请自己截图保存。</strong></li>
<li>有时更新失败，可能是 Github 被墙了，请稍后在尝试。</li>
</ul>
]]></content>
      <categories>
        <category>科技·工程</category>
      </categories>
      <tags>
        <tag>PicX</tag>
        <tag>洛谷</tag>
        <tag>Github</tag>
        <tag>图床</tag>
        <tag>教程</tag>
        <tag>视频教程</tag>
      </tags>
  </entry>
  <entry>
    <title>A+B</title>
    <url>/article/A+B/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h1><p>设$f<em>1=A,f_2=B,f_n(n&gt;2)=f</em>{n-1}+f_{n-2},$则$f_3$就是ANSWER $A+B$。</p>
<h1 id="推导"><a href="#推导" class="headerlink" title="推导"></a>推导</h1><p>设 $q^n=q^{n-1}+q^{n-2},$ 解得$(q≠0)q_1=\frac{1+\sqrt{5}}{2},q_2=\frac{1-\sqrt{5}}{2}$。\<br>再设$\begin{cases}<br>  f_n=aq_1^{n-1}+bq_2^{n-1} \<br>  f_1=A,f_2=B<br>\end{cases}$\<br>代入，即得$\begin{cases}<br>  a+b=A \<br>  a(\frac{1+\sqrt{5}}{2})+b(\frac{1-\sqrt{5}}{2})=B<br>\end{cases}$\<br>解二元一次方程组得$\begin{cases}<br>  a=\frac{B-A(\frac{1-\sqrt{5}}{2})}{\sqrt{5}} \<br>  b=\frac{A(\frac{1+\sqrt{5}}{2})-B}{\sqrt{5}}<br>\end{cases}$\<br>再代入得$f_n=\frac{1}{\sqrt{5}}((B-A(\frac{1-\sqrt{5}}{2}))(\frac{1+\sqrt{5}}{2})^{n-1}+(A(\frac{1+\sqrt{5}}{2})-B)(\frac{1-\sqrt{5}}{2})^{n-1})$</p>
<h1 id="解答"><a href="#解答" class="headerlink" title="解答"></a>解答</h1><p>将 $n=3$ 代入 $f_n=\frac{1}{\sqrt{5}}((B-A(\frac{1-\sqrt{5}}{2}))(\frac{1+\sqrt{5}}{2})^{n-1}+(A(\frac{1+\sqrt{5}}{2})-B)(\frac{1-\sqrt{5}}{2})^{n-1})$\<br>得<br>$<br>\begin{aligned}<br>A+B &amp;= f_3\<br>    &amp;= \frac{1}{\sqrt{5}}((B-A(\frac{1-\sqrt{5}}{2}))(\frac{1+\sqrt{5}}{2})^{2}+(A(\frac{1+\sqrt{5}}{2})-B)(\frac{1-\sqrt{5}}{2})^{2})\<br>    &amp;= \frac{1}{\sqrt{5}}((B-A(\frac{1-\sqrt{5}}{2}))(\frac{3+\sqrt{5}}{2})+(A(\frac{1+\sqrt{5}}{2})-B)(\frac{3-\sqrt{5}}{2}))<br>\end{aligned}<br>$</p>
<h1 id="实现"><a href="#实现" class="headerlink" title="实现"></a>实现</h1><p>只要计算$\frac{1}{\sqrt{5}}((B-A(\frac{1-\sqrt{5}}{2}))(\frac{3+\sqrt{5}}{2})+(A(\frac{1+\sqrt{5}}{2})-B)(\frac{3-\sqrt{5}}{2}))$,就可以得到 P1001 的AC。</p>
<h1 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h1><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="type">double</span> a,b,c=<span class="built_in">sqrt</span>(<span class="number">5</span>);</span><br><span class="line">	cin&gt;&gt;a&gt;&gt;b;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;%.0lf&quot;</span>,((b-a*(<span class="number">1.0</span>-c)/<span class="number">2.0</span>)*(<span class="number">3.0</span>+c)/<span class="number">2.0</span>+((a*(<span class="number">1.0</span>+c)/<span class="number">2.0</span>-b)*(<span class="number">3.0</span>-c)/<span class="number">2</span>))/c);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
  </entry>
  <entry>
    <title>P10264 [GESP202403 八级] 接竹竿</title>
    <url>/article/sol-P10264/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h3><p>题目传送门：<a href="/problem/p10264">P10264 [GESP202403 八级] 接竹竿</a></p>
<p>思维题，考虑倍增。</p>
<h3 id="Analysis"><a href="#Analysis" class="headerlink" title="Analysis"></a>Analysis</h3><ul>
<li>$30pts$ 模拟，$1\le a_i\le13$，根据题意，队列中不会存在两个相同的点数，所以队列的最大长度为 $13$，对于每一个 $(l,r)$，模拟加队列的过程，每添加一个牌从队列头开始查找有无相同的点数，如有则从队列中删除所有后续的元素。复杂度为 $O(T\times q\times N\times13)$。</li>
<li>$100pts$ 倍增，一共 $13$ 个点数，由题意，从自身出发，到下一个相同点数，这样的整段都可以被取走。每个点都可以维护下一个相同点数的位置。\<br><strong>但是这样的跳跃速度还是太慢了</strong>，通过倍增来加速。$nxt[i][j]$ 表示从 $i$ 出发的，第 $2\land j$ 个段的结尾位置。可知 $nxt[i][j+1]=nxt[nxt[i][j]+1][j]$。\<br>复杂度 $O(T\times q\times \log N)$。</li>
</ul>
<h3 id="Code"><a href="#Code" class="headerlink" title="Code"></a>Code</h3><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="comment">//Reprinted from gesp.ccf.org</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ll long long</span></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">1e5</span> + <span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> a[N];</span><br><span class="line"><span class="type">int</span> nxt[N][<span class="number">30</span>], pos[<span class="number">20</span>];</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">	<span class="type">int</span> t;</span><br><span class="line">	cin &gt;&gt; t;</span><br><span class="line">	<span class="keyword">while</span> (t--) &#123;</span><br><span class="line">		<span class="type">int</span> n;</span><br><span class="line">		cin &gt;&gt; n;</span><br><span class="line">		<span class="built_in">memset</span>(pos, <span class="number">0</span>, <span class="keyword">sizeof</span> pos);</span><br><span class="line"></span><br><span class="line">		<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line">			cin &gt;&gt; a[i];</span><br><span class="line">			<span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt;= <span class="number">20</span>; j++)nxt[i][j] = n + <span class="number">1</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">for</span> (<span class="type">int</span> i = n; i &gt;= <span class="number">1</span>; i--) &#123;</span><br><span class="line">			<span class="keyword">if</span> (!pos[a[i]]) &#123;</span><br><span class="line">				nxt[a[i]][<span class="number">0</span>] = n + <span class="number">1</span>;</span><br><span class="line">				pos[a[i]] = i;</span><br><span class="line">			&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">				nxt[i][<span class="number">0</span>] = pos[a[i]];</span><br><span class="line">				pos[a[i]] = i;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">for</span> (<span class="type">int</span> i = n; i &gt;= <span class="number">1</span>; i--) &#123;</span><br><span class="line">			<span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">1</span>; j &lt;= <span class="number">20</span>; j++) &#123;</span><br><span class="line">				<span class="keyword">if</span> (nxt[i][j - <span class="number">1</span>] + <span class="number">1</span> &lt;= n)</span><br><span class="line">					nxt[i][j] = nxt[nxt[i][j - <span class="number">1</span>] + <span class="number">1</span>][j - <span class="number">1</span>];</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="type">int</span> q;</span><br><span class="line">		cin &gt;&gt; q;</span><br><span class="line">		<span class="keyword">while</span> (q--) &#123;</span><br><span class="line">			<span class="type">int</span> l, r;</span><br><span class="line">			cin &gt;&gt; l &gt;&gt; r;</span><br><span class="line">			<span class="type">int</span> ii = l;</span><br><span class="line">			<span class="type">int</span> ans = <span class="number">0</span>;</span><br><span class="line">			<span class="keyword">while</span> (ii &lt;= r) &#123;</span><br><span class="line">				<span class="keyword">while</span> (ii &lt;= r &amp;&amp; nxt[ii][<span class="number">0</span>] &gt; r) &#123;</span><br><span class="line">					ii++;</span><br><span class="line">					ans++;</span><br><span class="line">				&#125;</span><br><span class="line">				<span class="keyword">if</span> (ii &gt; r)<span class="keyword">break</span>;</span><br><span class="line">				<span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">20</span>; j &gt;= <span class="number">0</span>; j--) &#123;</span><br><span class="line">					<span class="keyword">if</span> (nxt[ii][j] &lt;= r) &#123;</span><br><span class="line">						ii = nxt[ii][j];</span><br><span class="line">						<span class="keyword">break</span>;</span><br><span class="line">					&#125;</span><br><span class="line">				&#125;</span><br><span class="line">				ii++;</span><br><span class="line">			&#125;</span><br><span class="line">			cout &lt;&lt; ans &lt;&lt; <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>洛谷题解</category>
      </categories>
      <tags>
        <tag>题解</tag>
      </tags>
  </entry>
  <entry>
    <title>CF382B Number Busters</title>
    <url>/article/sol-CF382B/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h3><p>题目传送门：<a href="/problem/CF382B">CF382B Number Busters</a>。</p>
<h3 id="Analysis"><a href="#Analysis" class="headerlink" title="Analysis"></a>Analysis</h3><blockquote>
<p>两个人玩游戏，他们有 $a$，$b$，$w$，$x$，$c$ 五个数，每秒可执行一次操作，要使最终结果为 $c\le a$。操作如下：如果 $b\ge x$，则 $b=b-x$，同时 $c=c-1$；如果 $b&lt;x$，则 $a=a-1$，$c=c-1$，$b=w-(x-b)$。求 $c\le a$  时已经走过的秒数。</p>
</blockquote>
<p>题目已经说的很清楚了，按照模拟即可。</p>
<p>在 $c&lt;a$ 时，执行以下操作：</p>
<ul>
<li>$b \ge x$ 时，$b=b−1$，$c=c−1$。</li>
<li>$b &lt; x$ 时，$a=a−1$，$c=c − 1$，$b=w−x+b$。</li>
</ul>
<h3 id="Code"><a href="#Code" class="headerlink" title="Code"></a>Code</h3><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> LL;</span><br><span class="line">	</span><br><span class="line">	LL a , b , w , x , c;</span><br><span class="line">	cin &gt;&gt; a &gt;&gt; b &gt;&gt; w &gt;&gt; x &gt;&gt; c; <span class="comment">//5个数字</span></span><br><span class="line">	</span><br><span class="line">	LL ans = <span class="number">0</span>; <span class="comment">//最后的秒数</span></span><br><span class="line">	</span><br><span class="line">	<span class="keyword">while</span>(c &gt; a) <span class="comment">//模拟</span></span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">if</span>(b &gt;= x)</span><br><span class="line">			b -= x , c --;</span><br><span class="line">		</span><br><span class="line">		<span class="keyword">else</span> <span class="keyword">if</span>(b &lt; x)</span><br><span class="line">			a -- , c -- , b = w - (x - b);</span><br><span class="line">		</span><br><span class="line">		ans ++; <span class="comment">//秒数++</span></span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	cout &lt;&lt; ans &lt;&lt; endl;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>洛谷题解</category>
      </categories>
      <tags>
        <tag>题解</tag>
      </tags>
  </entry>
  <entry>
    <title>✨简简单单写程序</title>
    <url>/article/Hello-Word/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><blockquote>
<p>每个伟大的梦想，都有一个微不足道的开始。</p>
</blockquote>
<h2 id="程序的设计目标和流程"><a href="#程序的设计目标和流程" class="headerlink" title="程序的设计目标和流程"></a>程序的设计目标和流程</h2><p>设计一个程序是为了让计算机始终不渝地遵循指令，以完成特定的任务。为<br>了能让计算机听懂指令，我们编写程序来与计算机交流。</p>
<h3 id="编程方法"><a href="#编程方法" class="headerlink" title="编程方法"></a>编程方法</h3><ol>
<li>使用IDE（集成编辑环境）例如：Dev C++ / CodeBlocks。</li>
<li>使用洛谷在线编程 <a href="https://www.luogu.com.cn/ide">https://www.luogu.com.cn/ide</a>。</li>
</ol>
<h3 id="什么是编程"><a href="#什么是编程" class="headerlink" title="什么是编程"></a>什么是编程</h3><p><strong>程序</strong> 就是为实现特定目标或解决特定问题而用计算机语言编写的一系列令序列。</p>
<p><strong>计算机语言</strong> 是人与计算机之间通信的语言。</p>
<p><strong>编程</strong> 是程序员为解决特定问题，按照自己的思路，在遵循特定的计算机语言规则下编写程序的过程。</p>
<h3 id="C-语言"><a href="#C-语言" class="headerlink" title="C++ 语言"></a>C++ 语言</h3><p>以 C++ 语言规则为例来学习编程。</p>
<ul>
<li><strong>直接原因：</strong> 信息学竞赛只允许使用 C++。</li>
<li><strong>其他原因：</strong> 比较底层，运行速度快。</li>
</ul>
<p>C++ 是编译语言，需要编译成可执行文件。</p>
<hr>
<h3 id="例1-你好洛谷"><a href="#例1-你好洛谷" class="headerlink" title="例1. 你好洛谷"></a>例1. 你好洛谷</h3><p>编写一个程序，让计算机告诉大家我爱洛谷，即<code>I love Luogu!</code></p>
<p>代码如下：<br><img src="https://cdn.luogu.com.cn/upload/image_hosting/jccxx4o7.png" alt=""></p>
<p>输入输出自行百度。</p>
<h3 id="解决算法问题的步骤"><a href="#解决算法问题的步骤" class="headerlink" title="解决算法问题的步骤"></a>解决算法问题的步骤</h3><p><img src="https://cdn.luogu.com.cn/upload/image_hosting/gzavfikx.png" alt=""></p>
<h2 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h2><p>用于<strong>存放数据</strong>的容器。</p>
<p>有不同的类型——整数、浮点数、字符，等等。变量的值可以变化。</p>
<p>可以当做表达式的一部分参与计算。</p>
<h3 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h3><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	数据类型 变量名;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="常见类型"><a href="#常见类型" class="headerlink" title="常见类型"></a>常见类型</h3><div class="table-container">
<table>
<thead>
<tr>
<th style="text-align:center">类型名</th>
<th style="text-align:center">作用</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">int</td>
<td style="text-align:center">整型，如 <code>int a = 1;</code></td>
</tr>
<tr>
<td style="text-align:center">float &amp; double</td>
<td style="text-align:center">浮点，一个单精度，一个双精度。如 <code>double a = 3.1415926</code></td>
</tr>
<tr>
<td style="text-align:center">bool</td>
<td style="text-align:center">布尔，只有 <code>0</code> 或 <code>1</code>，代表真和。如 <code>bool flag = 0; //或者 bool flag = false;</code></td>
</tr>
<tr>
<td style="text-align:center">char</td>
<td style="text-align:center">字符型，内存放字符，定义或访问时要用单引号包着，如 <code>char a = &#39;A&#39;;</code></td>
</tr>
</tbody>
</table>
</div>
<h3 id="变量的名称"><a href="#变量的名称" class="headerlink" title="变量的名称"></a>变量的名称</h3><ol>
<li>只能由<strong>英文字母、数字和下划线（_）</strong> 组成。</li>
<li>不能以数字开头。</li>
<li>不能和其他“关键字”重复。关键字（又称保留字）有很多，比如 <code>if</code> , <code>int</code>。</li>
<li>要区分大小写，如 $Ans$ 和 $anS$ 是两个完全不同的变量。</li>
</ol>
<h2 id="数学"><a href="#数学" class="headerlink" title="数学"></a>数学</h2><p>C++ 还可以运算数学，（常用的）具体如下：<br>| 数学符号 | C++ 运算符号 |<br>| :—————: | :—————: |<br>| $+$ | $+$ |<br>| $-$ | $-$ |<br>| $\times$   |  $*$  |<br>| $\div$ |  $/$ |</p>
<p>还有一些二进制运算符后面会学到。</p>
<p>实例：<br><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	cout &lt;&lt; <span class="number">114</span> * <span class="number">514</span> / <span class="number">114514</span> + <span class="number">114514</span> &lt;&lt; endl;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h3 id="一些注意的点"><a href="#一些注意的点" class="headerlink" title="一些注意的点"></a>一些注意的点</h3><ol>
<li>不能除 0。</li>
<li>浮点运算必须带有至少一个浮点数，不然默认整型，会产生<strong>精度误差</strong>。</li>
</ol>
<h2 id="学以致用"><a href="#学以致用" class="headerlink" title="学以致用"></a>学以致用</h2><p><a href="https://www.luogu.com.cn/problem/P1000">超级玛丽游戏</a></p>
<p>超级玛丽是一个非常经典的游戏。请你用字符画的形式输出超级玛丽中的一个场景。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">                ********</span><br><span class="line">               ************</span><br><span class="line">               ####....#.</span><br><span class="line">             #..###.....##....</span><br><span class="line">             ###.......######              ###            ###</span><br><span class="line">                ...........               #...#          #...#</span><br><span class="line">               ##*#######                 #.#.#          #.#.#</span><br><span class="line">            ####*******######             #.#.#          #.#.#</span><br><span class="line">           ...#***.****.*###....          #...#          #...#</span><br><span class="line">           ....**********##.....           ###            ###</span><br><span class="line">           ....****    *****....</span><br><span class="line">             ####        ####</span><br><span class="line">           ######        ######</span><br><span class="line">##############################################################</span><br><span class="line">#...#......#.##...#......#.##...#......#.##------------------#</span><br><span class="line">###########################################------------------#</span><br><span class="line">#..#....#....##..#....#....##..#....#....#####################</span><br><span class="line">##########################################    #----------#</span><br><span class="line">#.....#......##.....#......##.....#......#    #----------#</span><br><span class="line">##########################################    #----------#</span><br><span class="line">#.#..#....#..##.#..#....#..##.#..#....#..#    #----------#</span><br><span class="line">##########################################    ############</span><br></pre></td></tr></table></figure>
<h3 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h3><p>多行输出即可，注意加上换行 <code>endl</code> 或 <code>\n</code>。<br><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line">  </span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	cout&lt;&lt;<span class="string">&quot;                ********\n&quot;</span>;</span><br><span class="line">	cout&lt;&lt;<span class="string">&quot;               ************\n&quot;</span>;</span><br><span class="line">	cout&lt;&lt;<span class="string">&quot;               ####....#.\n&quot;</span>;</span><br><span class="line">	cout&lt;&lt;<span class="string">&quot;             #..###.....##....\n&quot;</span>;</span><br><span class="line">	cout&lt;&lt;<span class="string">&quot;             ###.......######              ###            ###\n&quot;</span>;</span><br><span class="line">	cout&lt;&lt;<span class="string">&quot;                ...........               #...#          #...#\n&quot;</span>;</span><br><span class="line">	cout&lt;&lt;<span class="string">&quot;               ##*#######                 #.#.#          #.#.#\n&quot;</span>;</span><br><span class="line">	cout&lt;&lt;<span class="string">&quot;            ####*******######             #.#.#          #.#.#\n&quot;</span>;</span><br><span class="line">	cout&lt;&lt;<span class="string">&quot;           ...#***.****.*###....          #...#          #...#\n&quot;</span>;</span><br><span class="line">	cout&lt;&lt;<span class="string">&quot;           ....**********##.....           ###            ###\n&quot;</span>;</span><br><span class="line">	cout&lt;&lt;<span class="string">&quot;           ....****    *****....\n&quot;</span>;</span><br><span class="line">	cout&lt;&lt;<span class="string">&quot;             ####        ####\n&quot;</span>;</span><br><span class="line">	cout&lt;&lt;<span class="string">&quot;           ######        ######\n&quot;</span>;</span><br><span class="line">	cout&lt;&lt;<span class="string">&quot;##############################################################\n&quot;</span>;</span><br><span class="line">	cout&lt;&lt;<span class="string">&quot;#...#......#.##...#......#.##...#......#.##------------------#\n&quot;</span>;</span><br><span class="line">	cout&lt;&lt;<span class="string">&quot;###########################################------------------#\n&quot;</span>;</span><br><span class="line">	cout&lt;&lt;<span class="string">&quot;#..#....#....##..#....#....##..#....#....#####################\n&quot;</span>;</span><br><span class="line">	cout&lt;&lt;<span class="string">&quot;##########################################    #----------#\n&quot;</span>;</span><br><span class="line">	cout&lt;&lt;<span class="string">&quot;#.....#......##.....#......##.....#......#    #----------#\n&quot;</span>;</span><br><span class="line">	cout&lt;&lt;<span class="string">&quot;##########################################    #----------#\n&quot;</span>;</span><br><span class="line">	cout&lt;&lt;<span class="string">&quot;#.#..#....#..##.#..#....#..##.#..#....#..#    #----------#\n&quot;</span>;</span><br><span class="line">	cout&lt;&lt;<span class="string">&quot;##########################################    ############\n&quot;</span>;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>; </span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure></p>
<h3 id="另外一些事情"><a href="#另外一些事情" class="headerlink" title="另外一些事情"></a>另外一些事情</h3><ol>
<li>推荐算法平台：洛谷。</li>
</ol>
<p>洛谷创办于2013年,致力于为参加noip、noi、acm的选手提供清爽、快捷的编程体验。它拥有在线测题系统、强大的社区、在线学习功能。很多教程内容由各位oiers提供的,内容广泛。</p>
<ol>
<li>Debug</li>
</ol>
<p>先可以尝试模拟代码，找到错误；实在不行可以在洛谷发帖求助。</p>
<ol>
<li>推荐的书<br><a href="https://item.taobao.com/item.htm?id=637730514783"><img src="https://cdn.luogu.com.cn/upload/image_hosting/njc7dlng.png" alt=""></a></li>
</ol>
<p><strong>覆盖算法竞赛语言、基础算法，打好坚实基础</strong></p>
<p>本书从介绍 C++ 语言开始，各个击破程序设计竞赛中的基础考点，包括各种基础算法、数据结构和数学知识。</p>
<p>这些都是重中之重，如果没有掌握这些知识，继续深入的学习就如同试图建设空中楼阁。这些知识对读者的数学水平要求不高，有初中的数学基础即可阅读。</p>
<p><strong>深入浅出，解答“是什么、为什么、怎么办”的问题</strong></p>
<p>正如本书的书名一样，本书力求使用浅显易懂的语言讲述各种深刻的算法思想，因此读起来生动有趣，而不是面对冰冷的数学符号和代码。</p>
<p>每个专题中都会以精心选择的例题为主线，先介绍这个知识点是用来干什么的；然后花费大量的篇幅，图文并茂地介绍各个知识点的详细过程和代码实现方法；最后结合题目，介绍了如何将算法应用到实战中。有些例题甚至介绍了多种不同做法，帮助读者拓展思维，举一反三。</p>
<p><strong>适用人群：备战 NOIP、ICPC 等算法竞赛的初阶选手</strong></p>
<p>本书的多数例题都配备代码风格良好的示例代码，可以帮助读者更好地学习算法如何使用代码实现。在讲解的过程中给出了大量的算法竞赛中需要注意的琐碎问题，这些都是前人的经验之谈，希望读者可以少走弯路。</p>
<p><strong>近 400 道例题和习题，可以在线提交评测。</strong></p>
<p>本书有约 400 道例题和习题。为了节约阅读时间和篇幅，例题和习题都只保留了题意简述。大部分的题目都可以在洛谷中找到并提交代码评测，还可在洛谷阅读其他同学提供的题解并进行讨论。</p>
<p>题目选材范围多样，覆盖了应当学习了解的知识点。如果读者能够完全掌握这些题目，相信可以有相当程度的进步。</p>
<p>可以先尝试适读，<a href="https://ipic.luogu.com.cn/upload/lgbook1_demo.pdf">链接</a>。</p>
<hr>
<h1 id="洛谷试炼场（用于练习熟练度）"><a href="#洛谷试炼场（用于练习熟练度）" class="headerlink" title="洛谷试炼场（用于练习熟练度）"></a>洛谷试炼场（用于练习熟练度）</h1><h1 id="新手村"><a href="#新手村" class="headerlink" title="新手村"></a>新手村</h1><p>任何一个伟大的目标，都有一个微不足道的开始。</p>
<h2 id="洛谷入门"><a href="#洛谷入门" class="headerlink" title="洛谷入门"></a>洛谷入门</h2><p>勇敢的迈出第一步，了解下语言和洛谷。跟着书本和老师走，不会难的。</p>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P1000">P1000</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1001">P1001</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1421">P1421</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1425">P1425</a></li>
</ul>
<h2 id="顺序与分支"><a href="#顺序与分支" class="headerlink" title="顺序与分支"></a>顺序与分支</h2><p>计算机的智能性开始得以体现，因为计算机能够根据不同的条件选择了。</p>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P1422">P1422</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1085">P1085</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1089">P1089</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1909">P1909</a></li>
</ul>
<h2 id="循环！循环！循环！"><a href="#循环！循环！循环！" class="headerlink" title="循环！循环！循环！"></a>循环！循环！循环！</h2><p>计算机最不怕的就是重复。你让它做10000次同样的事它也不怕啦，但是让他做1亿亿次的话……</p>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P1008">P1008</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1035">P1035</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1423">P1423</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1424">P1424</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1980">P1980</a></li>
</ul>
<h2 id="数组"><a href="#数组" class="headerlink" title="数组"></a>数组</h2><p>跟数组有关的题目基本上都要用到循环，所以请先完成前面几部分。</p>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P1046">P1046</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1047">P1047</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1427">P1427</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1428">P1428</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2141">P2141</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1567">P1567</a></li>
</ul>
<h2 id="简单字符串"><a href="#简单字符串" class="headerlink" title="简单字符串"></a>简单字符串</h2><p>计算机不仅可以处理数字，还能处理文字！就是其实跟数字也没什么差。</p>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P1055">P1055</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1200">P1200</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1308">P1308</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1553">P1553</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1598">P1598</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1914">P1914</a></li>
</ul>
<h2 id="过程函数与递归"><a href="#过程函数与递归" class="headerlink" title="过程函数与递归"></a>过程函数与递归</h2><p>将代码串进行打包，就是过程与函数。过程与函数调用自己则为递归。有一点小难但不要怕哦。</p>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P1028">P1028</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1036">P1036</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1149">P1149</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1217">P1217</a></li>
</ul>
<h2 id="BOSS战-入门综合练习1"><a href="#BOSS战-入门综合练习1" class="headerlink" title="BOSS战-入门综合练习1"></a>BOSS战-入门综合练习1</h2><p>这里将前面的内容综合起来了，会有点难，不过你可以问老师同学，也能上网查资料。</p>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P1478">P1478</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1618">P1618</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1579">P1579</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2089">P2089</a></li>
</ul>
<h2 id="BOSS战-入门综合练习2"><a href="#BOSS战-入门综合练习2" class="headerlink" title="BOSS战-入门综合练习2"></a>BOSS战-入门综合练习2</h2><p>勇士，竟然来到了BOSS的老巢！来一场恶斗，证明自己的实力，解锁下一个级别！</p>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P1426">P1426</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1464">P1464</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1014">P1014</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1022">P1022</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1307">P1307</a></li>
</ul>
<h1 id="普及练习场"><a href="#普及练习场" class="headerlink" title="普及练习场"></a>普及练习场</h1><p>普及组选手可冲刺训练，提高组选手亦可在此巩固基础。</p>
<h2 id="简单的模拟"><a href="#简单的模拟" class="headerlink" title="简单的模拟"></a>简单的模拟</h2><p>开始普及组的训练！所谓模拟，就是直接根据题意编写，思维难度简单。</p>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P1003">P1003</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1067">P1067</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1540">P1540</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1056">P1056</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1328">P1328</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1563">P1563</a></li>
</ul>
<h2 id="交叉模拟"><a href="#交叉模拟" class="headerlink" title="交叉模拟"></a>交叉模拟</h2><p>这里也是模拟，但是会混有些别的部分。思维难度不大，但是编写起来会有些难度。</p>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P1023">P1023</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1031">P1031</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1042">P1042</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1086">P1086</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1098">P1098</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3952">P3952</a></li>
</ul>
<h2 id="排序"><a href="#排序" class="headerlink" title="排序"></a>排序</h2><p>将杂乱无章的数据变得有规律。有各种各样的排序算法，看情况使用。</p>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P1177">P1177</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1059">P1059</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1068">P1068</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1781">P1781</a></li>
</ul>
<h2 id="排序Ex"><a href="#排序Ex" class="headerlink" title="排序Ex"></a>排序Ex</h2><p>这里的排序就更上一层了。不仅融合了别的算法与技巧，排序本身也有各种花招。</p>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P1583">P1583</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1051">P1051</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1093">P1093</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1309">P1309</a></li>
</ul>
<h2 id="字符串处理"><a href="#字符串处理" class="headerlink" title="字符串处理"></a>字符串处理</h2><p>这里的字符串处理还会变得更加的有意思，难度也更大。需要好好地思考一下。</p>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P1603">P1603</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1071">P1071</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1012">P1012</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1538">P1538</a></li>
</ul>
<h2 id="贪心"><a href="#贪心" class="headerlink" title="贪心"></a>贪心</h2><p>贪心就是只考虑眼前的利益。对于我们人生来说太贪是不好的，不过oi中，有时是对的。</p>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P1090">P1090</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1181">P1181</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1208">P1208</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1223">P1223</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1094">P1094</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1803">P1803</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1031">P1031</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1080">P1080</a></li>
</ul>
<h2 id="深度优先搜索"><a href="#深度优先搜索" class="headerlink" title="深度优先搜索"></a>深度优先搜索</h2><p>搜索可以穷举各种情况。很多题目都可以用搜索完成。就算不能，搜索也是骗分神器。</p>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P1219">P1219</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1019">P1019</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1101">P1101</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1605">P1605</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1040">P1040</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1092">P1092</a></li>
</ul>
<h2 id="广度优先搜索"><a href="#广度优先搜索" class="headerlink" title="广度优先搜索"></a>广度优先搜索</h2><p>广度优先搜索可以用来找有关“最短步数”的问题。嗯，也可以用来“地毯式搜索”。</p>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P1162">P1162</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1032">P1032</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1141">P1141</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1126">P1126</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1443">P1443</a></li>
</ul>
<h2 id="带有技巧的搜索"><a href="#带有技巧的搜索" class="headerlink" title="带有技巧的搜索"></a>带有技巧的搜索</h2><p>这里的搜索不仅包含了dfs和bfs，还包括剪枝、记录等技巧以加快速度。</p>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P1118">P1118</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1434">P1434</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1433">P1433</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1074">P1074</a></li>
</ul>
<h2 id="分治算法"><a href="#分治算法" class="headerlink" title="分治算法"></a>分治算法</h2><p>将大问题拆分为小问题，分而治之，各个击破，然后在合并回来。</p>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P1226">P1226</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1010">P1010</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1908">P1908</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1498">P1498</a></li>
</ul>
<h2 id="简单数学问题"><a href="#简单数学问题" class="headerlink" title="简单数学问题"></a>简单数学问题</h2><p>用计算机解决某些麻烦数学问题，再合适不过了。这真是绝妙的搭配啊！</p>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P1088">P1088</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1045">P1045</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1403">P1403</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1017">P1017</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1147">P1147</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1029">P1029</a></li>
</ul>
<h2 id="递推与递归二分"><a href="#递推与递归二分" class="headerlink" title="递推与递归二分"></a>递推与递归二分</h2><p>递推，层层递进，由基础推向顶层。二分不仅可以用来查找数据，还可以确定最合适的值。</p>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P1192">P1192</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1025">P1025</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1057">P1057</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1135">P1135</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1216">P1216</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1182">P1182</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1316">P1316</a></li>
</ul>
<h2 id="线性数据结构"><a href="#线性数据结构" class="headerlink" title="线性数据结构"></a>线性数据结构</h2><p>数组，链表，队列，栈，都是线性结构。巧用这些结构可以做出不少方便的事情。</p>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P1996">P1996</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1115">P1115</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1739">P1739</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1160">P1160</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1449">P1449</a></li>
</ul>
<h2 id="树形数据结构"><a href="#树形数据结构" class="headerlink" title="树形数据结构"></a>树形数据结构</h2><p>由一个根节点分叉，越分越多，就成了树。树可以表示数据之间的从属关系</p>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P1087">P1087</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1030">P1030</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1305">P1305</a></li>
<li><a href="https://www.luogu.com.cn/problem/P5018">P5018</a></li>
</ul>
<h2 id="背包问题"><a href="#背包问题" class="headerlink" title="背包问题"></a>背包问题</h2><p>这是最基础的动态规划。不过如果是第一次接触会有些难以理解。加油闯过这个坎。</p>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P1060">P1060</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1164">P1164</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1064">P1064</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1048">P1048</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1049">P1049</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1616">P1616</a></li>
</ul>
<h2 id="线性动态规划"><a href="#线性动态规划" class="headerlink" title="线性动态规划"></a>线性动态规划</h2><p>这也是基础的动态规划。是在线性结构上面的动态规划，一定要掌握。</p>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P1020">P1020</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1091">P1091</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1280">P1280</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1880">P1880</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1140">P1140</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1282">P1282</a></li>
</ul>
<h2 id="多维动态规划"><a href="#多维动态规划" class="headerlink" title="多维动态规划"></a>多维动态规划</h2><p>这里的动态规划就不止一维了。不仅要小心时间复杂度，也要注意空间复杂度。</p>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P1508">P1508</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1006">P1006</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1387">P1387</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1417">P1417</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1855">P1855</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1736">P1736</a></li>
</ul>
<h2 id="动规与记忆化"><a href="#动规与记忆化" class="headerlink" title="动规与记忆化"></a>动规与记忆化</h2><p>这边的题目有各种搞法。当然有的题目也可以使用记忆化搜索来降低思维难度。</p>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P1064">P1064</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1541">P1541</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1026">P1026</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1063">P1063</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1156">P1156</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1052">P1052</a></li>
</ul>
<h2 id="高精度算法"><a href="#高精度算法" class="headerlink" title="高精度算法"></a>高精度算法</h2><p>就算是long long（或int64）还不够怎么办？用高精度算法。自己动手丰衣足食。</p>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P1601">P1601</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2142">P2142</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1303">P1303</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1255">P1255</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1604">P1604</a></li>
</ul>
<h2 id="贪心Pro"><a href="#贪心Pro" class="headerlink" title="贪心Pro"></a>贪心Pro</h2><p>虽然是贪心题，可能不是你当时你虐着玩的贪心惹qwq</p>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P1080">P1080</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1031">P1031</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1233">P1233</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2123">P2123</a></li>
</ul>
<h2 id="简单数论"><a href="#简单数论" class="headerlink" title="简单数论"></a>简单数论</h2><p>数学和OI是密切相关的，数学不仅是OI的基础，而且是算法的核心。</p>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P1865">P1865</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1372">P1372</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1338">P1338</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2158">P2158</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1582">P1582</a></li>
</ul>
<h2 id="BOSS战-普及综合练习1"><a href="#BOSS战-普及综合练习1" class="headerlink" title="BOSS战-普及综合练习1"></a>BOSS战-普及综合练习1</h2><p>好不容易闯到这一关，你那还等什么呢？抄起家伙赶快上啊！</p>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P1478">P1478</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1203">P1203</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1363">P1363</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1736">P1736</a></li>
</ul>
<h2 id="BOSS战-普及综合练习2"><a href="#BOSS战-普及综合练习2" class="headerlink" title="BOSS战-普及综合练习2"></a>BOSS战-普及综合练习2</h2><p>来搞定第二个BOSS。虽然战斗艰难，但你一定没有问题。</p>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P1201">P1201</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1095">P1095</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1058">P1058</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2258">P2258</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1108">P1108</a></li>
</ul>
<h2 id="BOSS战-普及综合练习3"><a href="#BOSS战-普及综合练习3" class="headerlink" title="BOSS战-普及综合练习3"></a>BOSS战-普及综合练习3</h2><p>普及练习场的大BOSS：“一定让你有去无回”。怎么办呢？只能打倒他开启下一个级别！</p>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P1328">P1328</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1062">P1062</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1969">P1969</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1037">P1037</a></li>
</ul>
<h2 id="普及常见模板"><a href="#普及常见模板" class="headerlink" title="普及常见模板"></a>普及常见模板</h2><p>这里集中了比较基础的算法的模板。提高和省选也有模板题哦！</p>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P1177">P1177</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3366">P3366</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3367">P3367</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3371">P3371</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3383">P3383</a></li>
</ul>
<h1 id="提高历练地"><a href="#提高历练地" class="headerlink" title="提高历练地"></a>提高历练地</h1><p>已经去除普及组难度，请大家放心。成长大牛之必写题！！！</p>
<h2 id="搜索Ex"><a href="#搜索Ex" class="headerlink" title="搜索Ex"></a>搜索Ex</h2><p>开始提高组的试炼。这里已经去除了所有普及组难度的题目。哼哼，怕了吧？</p>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P1120">P1120</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1378">P1378</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1514">P1514</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1312">P1312</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1441">P1441</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1242">P1242</a></li>
</ul>
<h2 id="动态规划LV-1"><a href="#动态规划LV-1" class="headerlink" title="动态规划LV_1"></a>动态规划LV_1</h2><p>这是提高组难度中比较基础的动态规划，也许一两个转移方程就可以写出。</p>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P1005">P1005</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1373">P1373</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2279">P2279</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1220">P1220</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1156">P1156</a></li>
</ul>
<h2 id="动态规划LV-2"><a href="#动态规划LV-2" class="headerlink" title="动态规划LV_2"></a>动态规划LV_2</h2><p>这里的动态规划稍稍有所加大难度，思考转移方程的时间可能会与编写程序的时间持平。</p>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P1273">P1273</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1169">P1169</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2577">P2577</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1070">P1070</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2051">P2051</a></li>
</ul>
<h2 id="动态规划LV-3"><a href="#动态规划LV-3" class="headerlink" title="动态规划LV_3"></a>动态规划LV_3</h2><p>比较需要技巧的动态规划。有的不仅仅需要状态转移方程，可能还会与别的算法综合。</p>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P1415">P1415</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2157">P2157</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2216">P2216</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2331">P2331</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2467">P2467</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3084">P3084</a></li>
</ul>
<h2 id="数论"><a href="#数论" class="headerlink" title="数论"></a>数论</h2><p>数论就是研究整数的理论。包括公约公倍数、质数、欧拉定理和同余方程等。</p>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P2152">P2152</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1414">P1414</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1134">P1134</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1313">P1313</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1306">P1306</a></li>
</ul>
<h2 id="博弈论"><a href="#博弈论" class="headerlink" title="博弈论"></a>博弈论</h2><p>博弈论考虑游戏中的个体的预测行为和实际行为，并研究它们的优化策略。</p>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P1199">P1199</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1288">P1288</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1290">P1290</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2148">P2148</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1247">P1247</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2575">P2575</a></li>
</ul>
<h2 id="其他数学问题"><a href="#其他数学问题" class="headerlink" title="其他数学问题"></a>其他数学问题</h2><p>听说学OI的同志们数学都挺好。那么。就请完成下面的题目证明这一点吧！</p>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P1357">P1357</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1641">P1641</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2059">P2059</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2154">P2154</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2261">P2261</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2327">P2327</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1066">P1066</a></li>
</ul>
<h2 id="图的遍历"><a href="#图的遍历" class="headerlink" title="图的遍历"></a>图的遍历</h2><p>图是一种非常重要的数据结构，描述对象复杂的练习。这里开始接触图的基本概念。</p>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P2661">P2661</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1330">P1330</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1341">P1341</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2921">P2921</a></li>
</ul>
<h2 id="最短路问题"><a href="#最短路问题" class="headerlink" title="最短路问题"></a>最短路问题</h2><p>最短路是图论中最重要的部分，多种算法可以应用。很多题目都可以抽象成这种模型。</p>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P1339">P1339</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1462">P1462</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1346">P1346</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1119">P1119</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1144">P1144</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1522">P1522</a></li>
</ul>
<h2 id="最小生成树"><a href="#最小生成树" class="headerlink" title="最小生成树"></a>最小生成树</h2><p>最小生成树可以用kruskal（克鲁斯卡尔）算法或prim（普里姆）算法求出。</p>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P1546">P1546</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2330">P2330</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1991">P1991</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1265">P1265</a></li>
</ul>
<h2 id="较复杂图论I"><a href="#较复杂图论I" class="headerlink" title="较复杂图论I"></a>较复杂图论I</h2><p>别的些图论问题，包括树、拓扑排序等。要过这一关，需要学习不少新的算法。</p>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P1113">P1113</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1268">P1268</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1525">P1525</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1983">P1983</a></li>
</ul>
<h2 id="较复杂图论II"><a href="#较复杂图论II" class="headerlink" title="较复杂图论II"></a>较复杂图论II</h2><p>更高级的图论算法。包括差分约束、强连通、二分图等。会更难一些。</p>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P1993">P1993</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1726">P1726</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2055">P2055</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2149">P2149</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1345">P1345</a></li>
</ul>
<h2 id="并查集"><a href="#并查集" class="headerlink" title="并查集"></a>并查集</h2><p>用于处理一些不相交集合的合并及查询问题。常常在使用中以森林来表示。</p>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P1111">P1111</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2024">P2024</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1197">P1197</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1196">P1196</a></li>
</ul>
<h2 id="堆"><a href="#堆" class="headerlink" title="堆"></a>堆</h2><p>堆总是一棵完全树；堆中某个节点的值总是不大于或不小于其父节点的值。</p>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P1801">P1801</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2278">P2278</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1631">P1631</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2085">P2085</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1484">P1484</a></li>
</ul>
<h2 id="线段树树状数组基础"><a href="#线段树树状数组基础" class="headerlink" title="线段树树状数组基础"></a>线段树树状数组基础</h2><p>这都是比较高级的线性数据结构。在处理一些询问与修改线性问题时，是很好用的。</p>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P1972">P1972</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1198">P1198</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2023">P2023</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2161">P2161</a></li>
</ul>
<h2 id="神奇的解法"><a href="#神奇的解法" class="headerlink" title="神奇的解法"></a>神奇的解法</h2><p>有些问题刚开始觉得无从下手。好好想一想，尽量别看题解，否则你会大呼“简单”。</p>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P1007">P1007</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1984">P1984</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2022">P2022</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2320">P2320</a></li>
</ul>
<h2 id="倍增"><a href="#倍增" class="headerlink" title="倍增"></a>倍增</h2><p>一种特殊的枚举算法，但可大大加快效率。近年noip有考到。难度较大。</p>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P1967">P1967</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1081">P1081</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1613">P1613</a></li>
</ul>
<h2 id="强连通分量"><a href="#强连通分量" class="headerlink" title="强连通分量"></a>强连通分量</h2><ul>
<li><a href="https://www.luogu.com.cn/problem/P2341">P2341</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3469">P3469</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2746">P2746</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3119">P3119</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3225">P3225</a></li>
</ul>
<h2 id="BOSS战-提高综合练习1"><a href="#BOSS战-提高综合练习1" class="headerlink" title="BOSS战-提高综合练习1"></a>BOSS战-提高综合练习1</h2><p>年轻人，又是个送上门的，让我来看看你真实的本领。啊哈哈哈哈哈！</p>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P2264">P2264</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1772">P1772</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1083">P1083</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1979">P1979</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2939">P2939</a></li>
</ul>
<h2 id="BOSS战-提高综合练习2"><a href="#BOSS战-提高综合练习2" class="headerlink" title="BOSS战-提高综合练习2"></a>BOSS战-提高综合练习2</h2><p>再来！这里有的题目并非单纯的考察某个算法，而是考察一种综合性的思维。</p>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P1901">P1901</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1314">P1314</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2144">P2144</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1073">P1073</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2324">P2324</a></li>
</ul>
<h2 id="BOSS战-提高综合练习3"><a href="#BOSS战-提高综合练习3" class="headerlink" title="BOSS战-提高综合练习3"></a>BOSS战-提高综合练习3</h2><p>既然已经打倒了前面2个boss，那么第3个也是没有问题的。少年，来吧！</p>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P1965">P1965</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1311">P1311</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2296">P2296</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1084">P1084</a></li>
</ul>
<h2 id="提高模板-O-nlogn-数据结构"><a href="#提高模板-O-nlogn-数据结构" class="headerlink" title="提高模板-O(nlogn)数据结构"></a>提高模板-O(nlogn)数据结构</h2><p>虽然这些算法不是NOIp必须的，但是不算困难，很多题目可以使用这些方法。</p>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P3374">P3374</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3368">P3368</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3372">P3372</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3373">P3373</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1439">P1439</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3378">P3378</a></li>
</ul>
<h1 id="省选斗兽场-NOI神殿"><a href="#省选斗兽场-NOI神殿" class="headerlink" title="省选斗兽场/NOI神殿"></a>省选斗兽场/NOI神殿</h1><p>为省选及以上选手制作的训练场。其实，省选水平的oier不需要一些外加的刷题列表，本栏仅供参考，也欢迎各位指出不足。</p>
<h2 id="省选基础-读入-输出优化"><a href="#省选基础-读入-输出优化" class="headerlink" title="省选基础-读入/输出优化"></a>省选基础-读入/输出优化</h2><p>读入/输出优化是省选刷题时必要的一个东西，这里给出了几题，需要自己手写相应的读入输出处理。作为第一关，这一关相对简单。</p>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P1580">P1580</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2393">P2393</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2394">P2394</a></li>
</ul>
<h2 id="省选基础-位运算"><a href="#省选基础-位运算" class="headerlink" title="省选基础-位运算"></a>省选基础-位运算</h2><p>位运算往往在必要的时候,能带你优化一下常数,也许是空间;也许是时间;有的时候这样可以多过很多分</p>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P2114">P2114</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2396">P2396</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2397">P2397</a></li>
</ul>
<h2 id="省选基础-打表"><a href="#省选基础-打表" class="headerlink" title="省选基础-打表"></a>省选基础-打表</h2><p>打表虽然很赖皮,而且基本都是非正解,但是这种办法能让我们在省选中拿到一些会超时或者会超空间的一些数据点</p>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P1149">P1149</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1463">P1463</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1896">P1896</a></li>
</ul>
<h2 id="动态规划1"><a href="#动态规划1" class="headerlink" title="动态规划1"></a>动态规划1</h2><p>动态规划</p>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P2051">P2051</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1879">P1879</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1850">P1850</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2831">P2831</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1131">P1131</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1169">P1169</a></li>
</ul>
<h2 id="动态规划2"><a href="#动态规划2" class="headerlink" title="动态规划2"></a>动态规划2</h2><p>动态规划</p>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P1273">P1273</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3648">P3648</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2519">P2519</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2515">P2515</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3233">P3233</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2501">P2501</a></li>
</ul>
<h2 id="网络流——最大流"><a href="#网络流——最大流" class="headerlink" title="网络流——最大流"></a>网络流——最大流</h2><p>最大流</p>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P2765">P2765</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2764">P2764</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2763">P2763</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2766">P2766</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2774">P2774</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2805">P2805</a></li>
</ul>
<h2 id="网络流——费用流"><a href="#网络流——费用流" class="headerlink" title="网络流——费用流"></a>网络流——费用流</h2><p>费用流</p>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P2153">P2153</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2053">P2053</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3159">P3159</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2604">P2604</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2050">P2050</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3980">P3980</a></li>
</ul>
<h2 id="单调队列"><a href="#单调队列" class="headerlink" title="单调队列"></a>单调队列</h2><p>单调队列</p>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P2698">P2698</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2216">P2216</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2219">P2219</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2564">P2564</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2569">P2569</a></li>
</ul>
<h2 id="概率期望"><a href="#概率期望" class="headerlink" title="概率期望"></a>概率期望</h2><p>概率期望</p>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P2473">P2473</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2221">P2221</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3317">P3317</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3343">P3343</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3600">P3600</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3830">P3830</a></li>
</ul>
<h2 id="二分图"><a href="#二分图" class="headerlink" title="二分图"></a>二分图</h2><p>二分图</p>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P3386">P3386</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1640">P1640</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1129">P1129</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1963">P1963</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3231">P3231</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2526">P2526</a></li>
</ul>
<h2 id="点分治"><a href="#点分治" class="headerlink" title="点分治"></a>点分治</h2><p>点分治</p>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P2634">P2634</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2664">P2664</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3806">P3806</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3676">P3676</a></li>
</ul>
<h2 id="后缀数组"><a href="#后缀数组" class="headerlink" title="后缀数组"></a>后缀数组</h2><p>后缀数组</p>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P3809">P3809</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1117">P1117</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2178">P2178</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2463">P2463</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2336">P2336</a></li>
</ul>
<h2 id="主席树"><a href="#主席树" class="headerlink" title="主席树"></a>主席树</h2><p>主席树</p>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P2468">P2468</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3157">P3157</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3302">P3302</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3168">P3168</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3313">P3313</a></li>
</ul>
<h2 id="数位DP"><a href="#数位DP" class="headerlink" title="数位DP"></a>数位DP</h2><p>数位DP</p>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P2602">P2602</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3281">P3281</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2518">P2518</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2606">P2606</a></li>
</ul>
<h2 id="AC自动机"><a href="#AC自动机" class="headerlink" title="AC自动机"></a>AC自动机</h2><p>AC自动机</p>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P3808">P3808</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3796">P3796</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2444">P2444</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2414">P2414</a></li>
</ul>
<h2 id="平衡树"><a href="#平衡树" class="headerlink" title="平衡树"></a>平衡树</h2><p>平衡树</p>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P2042">P2042</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2596">P2596</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1110">P1110</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3285">P3285</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3644">P3644</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3765">P3765</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3369">P3369</a></li>
</ul>
<h2 id="树链剖分"><a href="#树链剖分" class="headerlink" title="树链剖分"></a>树链剖分</h2><p>树链剖分</p>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P2590">P2590</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2486">P2486</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2146">P2146</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3258">P3258</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3178">P3178</a></li>
</ul>
<h2 id="动态树"><a href="#动态树" class="headerlink" title="动态树"></a>动态树</h2><p>动态树</p>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P3690">P3690</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2387">P2387</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3203">P3203</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3348">P3348</a></li>
</ul>
<h2 id="树套树"><a href="#树套树" class="headerlink" title="树套树"></a>树套树</h2><p>树套树</p>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P1903">P1903</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3157">P3157</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3332">P3332</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2166">P2166</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3380">P3380</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2137">P2137</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3759">P3759</a></li>
</ul>
<h2 id="可持久化Trie树"><a href="#可持久化Trie树" class="headerlink" title="可持久化Trie树"></a>可持久化Trie树</h2><p>可持久化Trie树</p>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P2048">P2048</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3527">P3527</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3302">P3302</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3168">P3168</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3242">P3242</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3241">P3241</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3293">P3293</a></li>
</ul>
<h2 id="莫队算法"><a href="#莫队算法" class="headerlink" title="莫队算法"></a>莫队算法</h2><p>莫队算法</p>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P1972">P1972</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2336">P2336</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3709">P3709</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2709">P2709</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3674">P3674</a></li>
</ul>
<h2 id="分块"><a href="#分块" class="headerlink" title="分块"></a>分块</h2><p>分块</p>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P1972">P1972</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3396">P3396</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1822">P1822</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2801">P2801</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3203">P3203</a></li>
</ul>
<h2 id="莫比乌斯反演"><a href="#莫比乌斯反演" class="headerlink" title="莫比乌斯反演"></a>莫比乌斯反演</h2><p>莫比乌斯反演</p>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P3768">P3768</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3172">P3172</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3455">P3455</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2522">P2522</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3327">P3327</a></li>
</ul>
<h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><p>其他</p>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P3377">P3377</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3261">P3261</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3382">P3382</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2571">P2571</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3222">P3222</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3187">P3187</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3199">P3199</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3292">P3292</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2824">P2824</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3285">P3285</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1552">P1552</a></li>
</ul>
<h1 id="USACO"><a href="#USACO" class="headerlink" title="USACO"></a>USACO</h1><p>美国经典的算法练习题库，值得一刷</p>
<h2 id="USACO-Section-1-1"><a href="#USACO-Section-1-1" class="headerlink" title="USACO Section 1.1"></a>USACO Section 1.1</h2><ul>
<li><a href="https://www.luogu.com.cn/problem/P1200">P1200</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1201">P1201</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1202">P1202</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1203">P1203</a></li>
</ul>
<h2 id="USACO-Section-1-2"><a href="#USACO-Section-1-2" class="headerlink" title="USACO Section 1.2"></a>USACO Section 1.2</h2><p>完全枚举</p>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P3864">P3864</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1204">P1204</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1205">P1205</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1206">P1206</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1207">P1207</a></li>
</ul>
<h2 id="USACO-Section-1-3"><a href="#USACO-Section-1-3" class="headerlink" title="USACO Section 1.3"></a>USACO Section 1.3</h2><p>贪心</p>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P1208">P1208</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1209">P1209</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1211">P1211</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1444">P1444</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3650">P3650</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2693">P2693</a></li>
</ul>
<h2 id="USACO-Section-1-4"><a href="#USACO-Section-1-4" class="headerlink" title="USACO Section 1.4"></a>USACO Section 1.4</h2><p>有技巧的枚举</p>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P1214">P1214</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1215">P1215</a></li>
</ul>
<h2 id="USACO-Section-1-5"><a href="#USACO-Section-1-5" class="headerlink" title="USACO Section 1.5"></a>USACO Section 1.5</h2><p>二进制数</p>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P1216">P1216</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1217">P1217</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1218">P1218</a></li>
</ul>
<h2 id="USACO-Section-2-1"><a href="#USACO-Section-2-1" class="headerlink" title="USACO Section 2.1"></a>USACO Section 2.1</h2><p>图论和洪水填充</p>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P1457">P1457</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1458">P1458</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1459">P1459</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1460">P1460</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1461">P1461</a></li>
</ul>
<h2 id="USACO-Section-2-2"><a href="#USACO-Section-2-2" class="headerlink" title="USACO Section 2.2"></a>USACO Section 2.2</h2><p>数据结构与动态规划</p>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P1465">P1465</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1466">P1466</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1467">P1467</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1468">P1468</a></li>
</ul>
<h2 id="USACO-Section-2-3"><a href="#USACO-Section-2-3" class="headerlink" title="USACO Section 2.3"></a>USACO Section 2.3</h2><ul>
<li><a href="https://www.luogu.com.cn/problem/P1470">P1470</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1472">P1472</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1473">P1473</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1474">P1474</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1475">P1475</a></li>
</ul>
<h2 id="USACO-Section-2-4"><a href="#USACO-Section-2-4" class="headerlink" title="USACO Section 2.4"></a>USACO Section 2.4</h2><p>最短路径</p>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P1518">P1518</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1519">P1519</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1522">P1522</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1529">P1529</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1530">P1530</a></li>
</ul>
<h2 id="USACO-Section-3-1"><a href="#USACO-Section-3-1" class="headerlink" title="USACO Section 3.1"></a>USACO Section 3.1</h2><p>最小生成树</p>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P1546">P1546</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2722">P2722</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2723">P2723</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2724">P2724</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2725">P2725</a></li>
</ul>
<h2 id="USACO-Section-3-2"><a href="#USACO-Section-3-2" class="headerlink" title="USACO Section 3.2"></a>USACO Section 3.2</h2><p>背包问题</p>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P1134">P1134</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2727">P2727</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2728">P2728</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2729">P2729</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2730">P2730</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1828">P1828</a></li>
</ul>
<h2 id="USACO-Section-3-3"><a href="#USACO-Section-3-3" class="headerlink" title="USACO Section 3.3"></a>USACO Section 3.3</h2><p>欧拉回路</p>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P2731">P2731</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2732">P2732</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1930">P1930</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2733">P2733</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2734">P2734</a></li>
</ul>
<h2 id="USACO-Section-3-4"><a href="#USACO-Section-3-4" class="headerlink" title="USACO Section 3.4"></a>USACO Section 3.4</h2><p>计算几何</p>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P1827">P1827</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2735">P2735</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2736">P2736</a></li>
</ul>
<h2 id="USACO-Section-4-1"><a href="#USACO-Section-4-1" class="headerlink" title="USACO Section 4.1"></a>USACO Section 4.1</h2><p>最优化</p>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P2737">P2737</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2738">P2738</a></li>
</ul>
<h2 id="USACO-Section-4-2"><a href="#USACO-Section-4-2" class="headerlink" title="USACO Section 4.2"></a>USACO Section 4.2</h2><p>网络流</p>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P2740">P2740</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1894">P1894</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2751">P2751</a></li>
</ul>
<h2 id="USACO-Section-4-3"><a href="#USACO-Section-4-3" class="headerlink" title="USACO Section 4.3"></a>USACO Section 4.3</h2><p>高精度</p>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P2687">P2687</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2752">P2752</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2753">P2753</a></li>
</ul>
<h2 id="USACO-Section-4-4"><a href="#USACO-Section-4-4" class="headerlink" title="USACO Section 4.4"></a>USACO Section 4.4</h2><ul>
<li><a href="https://www.luogu.com.cn/problem/P1344">P1344</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2739">P2739</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2741">P2741</a></li>
</ul>
<h2 id="USACO-Section-5-1"><a href="#USACO-Section-5-1" class="headerlink" title="USACO Section 5.1"></a>USACO Section 5.1</h2><p>二维凸包</p>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P2742">P2742</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2743">P2743</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2749">P2749</a></li>
</ul>
<h2 id="USACO-Section-5-2"><a href="#USACO-Section-5-2" class="headerlink" title="USACO Section 5.2"></a>USACO Section 5.2</h2><ul>
<li><a href="https://www.luogu.com.cn/problem/P1560">P1560</a></li>
</ul>
<h2 id="USACO-Section-5-3"><a href="#USACO-Section-5-3" class="headerlink" title="USACO Section 5.3"></a>USACO Section 5.3</h2><p>启发式搜索</p>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P2701">P2701</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2744">P2744</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2745">P2745</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2746">P2746</a></li>
</ul>
<h2 id="USACO-Section-5-4"><a href="#USACO-Section-5-4" class="headerlink" title="USACO Section 5.4"></a>USACO Section 5.4</h2><ul>
<li><a href="https://www.luogu.com.cn/problem/P1345">P1345</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2747">P2747</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2748">P2748</a></li>
</ul>
<h2 id="USACO-Section-5-5"><a href="#USACO-Section-5-5" class="headerlink" title="USACO Section 5.5"></a>USACO Section 5.5</h2><ul>
<li><a href="https://www.luogu.com.cn/problem/P1709">P1709</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1856">P1856</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2750">P2750</a></li>
</ul>
]]></content>
      <categories>
        <category>算法·理论</category>
      </categories>
      <tags>
        <tag>洛谷,教程</tag>
      </tags>
  </entry>
  <entry>
    <title>P10401 「XSOI-R1」区间操作</title>
    <url>/article/sol-P10401/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>由于 Hexo 无法转义，详见原文：<a href="https://www.luogu.com.cn/article/2ifgwc5e。">https://www.luogu.com.cn/article/2ifgwc5e。</a></p>
]]></content>
      <categories>
        <category>洛谷题解</category>
      </categories>
      <tags>
        <tag>题解</tag>
      </tags>
  </entry>
  <entry>
    <title>P10313 [SHUPC 2024] 占地斗士！</title>
    <url>/article/sol-P10313/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h3><p>题目传送门：<a href="/problem/P10313">P10313 [SHUPC 2024]  占地斗士！</a>。</p>
<p>简单搜索题。</p>
<h3 id="Analysis"><a href="#Analysis" class="headerlink" title="Analysis"></a>Analysis</h3><p>容易发现，$1\le n,m\le10$，地图很小，所以考虑 DFS 算法。</p>
<p>其实是回溯，不是深度优先搜索。</p>
<p>题目不难，但细节多。</p>
<ul>
<li>用变量存下已经放置的卡牌数量。</li>
<li><strong>用 $\mathcal{vis}$ 记录此卡牌是否放置过（不能直接改地图，这是回溯的重要部分）</strong>。</li>
<li>其它就是回溯+剪枝即可。</li>
</ul>
<p>一些细节：</p>
<ul>
<li>暴力枚举每个形状可以放的所有位置。</li>
<li>是 <code>#</code> 不能放，换个位置。</li>
<li>可以放的话，卡牌数自增，答案加上<strong>占地格子数</strong>，<strong>不是 $1$</strong>。</li>
<li>可以放，记得 $vis$ 标记位置。</li>
</ul>
<p>若所有的卡牌都可以放入，那么直接输出 $18$，不用搜了，<strong>搜了小心 $\tt TLE$，程序卡死</strong>。</p>
<p>都可以放入的数据如下：</p>
<blockquote>
<h4 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&gt;10 10</span><br><span class="line">&gt;. . . . . . . . . .</span><br><span class="line">&gt;. . . . . . . . . .</span><br><span class="line">&gt;. . . . . . . . . .</span><br><span class="line">&gt;. . . . . . . . . .</span><br><span class="line">&gt;. . . . . . . . . .</span><br><span class="line">&gt;. . . . . . . . . .</span><br><span class="line">&gt;. . . . . . . . . .</span><br><span class="line">&gt;. . . . . . . . . .</span><br><span class="line">&gt;. . . . . . . . . .</span><br><span class="line">&gt;. . . . . . . . . .</span><br></pre></td></tr></table></figure>
<h4 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&gt;18</span><br></pre></td></tr></table></figure>
</blockquote>
<p>代码模拟即可。</p>
]]></content>
      <categories>
        <category>洛谷题解</category>
      </categories>
      <tags>
        <tag>题解</tag>
      </tags>
  </entry>
  <entry>
    <title>P10415 [蓝桥杯 2023 国 A] 切割</title>
    <url>/article/sol-P10415/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h3><p>题目传送门：<a href="/problem/P10415">P10415 [蓝桥杯 2023 国 A] 切割【暂无数据】</a>。</p>
<p>简单数学题。</p>
<h3 id="Analysis"><a href="#Analysis" class="headerlink" title="Analysis"></a>Analysis</h3><ol>
<li>求出 $W$ 和 $H\ge2$ 的<strong>最小公因数</strong>。记为 $LCF$。</li>
<li>将 $LCF$ 依次去除 $W,H$。记为 $Lw,Lh$。</li>
<li>答案为 $Lw\times Lh$。</li>
</ol>
<p>计算公式：</p>
<script type="math/tex; mode=display">
ANS=\frac{W\times H}{\operatorname{LCF^2}}</script><h3 id="Code"><a href="#Code" class="headerlink" title="Code"></a>Code</h3><p>模拟即可。</p>
]]></content>
      <categories>
        <category>洛谷题解</category>
      </categories>
      <tags>
        <tag>题解</tag>
      </tags>
  </entry>
  <entry>
    <title>P10314 [SHUPC 2024] 函数</title>
    <url>/article/sol-P10314/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>题目传送门：<a href="\problem\P10314">P10314 [SHUPC 2024] 函数</a></p>
<p>解函数题。</p>
<hr>
<h3 id="函数解读"><a href="#函数解读" class="headerlink" title="函数解读"></a>函数解读</h3><script type="math/tex; mode=display">f(x)=x-0.5+\frac{\arctan(\cot(\pi x))}{\pi}</script><div class="table-container">
<table>
<thead>
<tr>
<th style="text-align:center">函数</th>
<th style="text-align:center">名称</th>
<th style="text-align:center">$\operatorname{c++}$</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">$\arctan$</td>
<td style="text-align:center">反正切函数</td>
<td style="text-align:center">$\operatorname{atan}(\operatorname{double} x)$</td>
</tr>
<tr>
<td style="text-align:center">$\cot$</td>
<td style="text-align:center">余切函数</td>
<td style="text-align:center">$1.0/\tan(\operatorname{double} x)$</td>
</tr>
<tr>
<td style="text-align:center">$\pi$</td>
<td style="text-align:center">圆周率</td>
<td style="text-align:center"><code>std::numbers::pi</code></td>
</tr>
</tbody>
</table>
</div>
<p>所以，我们可以得出代码：</p>
<h2 id=""><a href="#" class="headerlink" title=""></a><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">double</span> <span class="title">f</span><span class="params">(<span class="type">double</span> x)</span></span>&#123;<span class="keyword">return</span> x - <span class="number">0.5</span> + <span class="built_in">atan</span>(<span class="number">1.0</span> / <span class="built_in">tan</span>(std::numbers::pi * x)) / std::numbers::pi;&#125;</span><br></pre></td></tr></table></figure></h2><h4 id="CODE"><a href="#CODE" class="headerlink" title="CODE"></a>CODE</h4><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">double</span> <span class="title">f</span><span class="params">(<span class="type">double</span> x)</span></span>&#123;<span class="keyword">return</span> x - <span class="number">0.5</span> + <span class="built_in">atan</span>(<span class="number">1.0</span> / <span class="built_in">tan</span>(std::numbers::pi * x)) / std::numbers::pi;&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="type">int</span> T;</span><br><span class="line">	cin &gt;&gt; T;</span><br><span class="line">	</span><br><span class="line">	<span class="keyword">while</span>(T --)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="type">double</span> x;</span><br><span class="line">		cin &gt;&gt; x;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;%7f\n&quot;</span>, <span class="built_in">f</span>(x));</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="Q-amp-A"><a href="#Q-amp-A" class="headerlink" title="Q&amp;A"></a>Q&amp;A</h3><ul>
<li>Q：为什么过不了编译？</li>
<li>A：因为有 <code>std::numbers::pi</code>，所以要用 <code>c++20</code> 提交。</li>
</ul>
<hr>
<ul>
<li>Q：为什么 $\cot(x) = \frac{1}{\tan x}$？</li>
<li>A：按照<strong>三角函数</strong>，$\cot x = \frac{b}{a}$ , $\tan x = \frac{a}{b}$，即 $\cot$ 和 $\tan$ 互为倒数，所以$\cot(x) = \frac{1}{\tan x}$。<h5 id="有问题欢迎评论区留言"><a href="#有问题欢迎评论区留言" class="headerlink" title="有问题欢迎评论区留言~"></a>有问题欢迎评论区留言~</h5></li>
</ul>
]]></content>
      <categories>
        <category>洛谷题解</category>
      </categories>
      <tags>
        <tag>题解</tag>
      </tags>
  </entry>
  <entry>
    <title>P10520 [XJTUPC2024] 榕树之心</title>
    <url>/article/sol-P10520/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h3><p>题目传送门：<a href="/problem/p10520">P10520 [XJTUPC2024] 榕树之心</a>。</p>
<p>求：</p>
<script type="math/tex; mode=display">x^{\prime} = \frac{1}{2} x + \frac{1}{2} y</script><script type="math/tex; mode=display">y^{\prime} = \frac{\sqrt{3}}{2} x - \frac{\sqrt{3}}{2} y</script><h3 id="Analysis"><a href="#Analysis" class="headerlink" title="Analysis"></a>Analysis</h3><p>直接模拟即可（运算记得带小数）。<br>| 式子 | 作用 |<br>| :—————: | :—————: |<br>| $\frac{1}{2}x$ | $x \div 2.0\ \operatorname{or} \ 0.5 \times x$ |<br>| $\sqrt{x}$ |  $\operatorname{sqrt}(x \times 1.0)$ |</p>
<h3 id="Code"><a href="#Code" class="headerlink" title="Code"></a>Code</h3><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="type">int</span> x , y;</span><br><span class="line">	cin &gt;&gt; x &gt;&gt; y;</span><br><span class="line">	</span><br><span class="line">	cout &lt;&lt; fixed &lt;&lt; <span class="built_in">setprecision</span>(<span class="number">6</span>) &lt;&lt; ((<span class="number">1</span>/<span class="number">2.0</span>)*x) + ((<span class="number">1</span>/<span class="number">2.0</span>) * y) &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; fixed &lt;&lt; <span class="built_in">setprecision</span>(<span class="number">6</span>) &lt;&lt; ((<span class="built_in">sqrt</span>(<span class="number">3.0</span>) / <span class="number">2.0</span>) * x) - ((<span class="built_in">sqrt</span>(<span class="number">3.0</span>) / <span class="number">2.0</span>) * y);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>洛谷题解</category>
      </categories>
      <tags>
        <tag>题解</tag>
      </tags>
  </entry>
  <entry>
    <title>P10522 [XJTUPC2024] 雪中楼</title>
    <url>/article/sol-P10522/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h3><p>题目传送门：<a href="/problem/p10522">P10522 [XJTUPC2024] 雪中楼</a>。</p>
<p>由于 $n \le 2 \times 10^5$，插入次数太多，考虑维护链表。</p>
<h3 id="Analysis"><a href="#Analysis" class="headerlink" title="Analysis"></a>Analysis</h3><p>对于每次操作，输入 $a_i$，若 $i=0$ 就将 $a_i$ 插到链表尾部，否则插到 $a_i$ 左边，最后翻转完输出，就这么简单。</p>
<h3 id="Code"><a href="#Code" class="headerlink" title="Code"></a>Code</h3><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> MAXN 2e5 + 10</span></span><br><span class="line"></span><br><span class="line">list &lt;<span class="type">int</span>&gt; l;</span><br><span class="line">list &lt;<span class="type">int</span>&gt; :: iterator number[<span class="built_in">int</span>(MAXN)] = </span><br><span class="line">&#123;</span><br><span class="line">	l.<span class="built_in">begin</span>() , l.<span class="built_in">end</span>()</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="built_in">main</span>()</span><br><span class="line">&#123;</span><br><span class="line">	<span class="type">int</span> n;</span><br><span class="line">	cin &gt;&gt; n;</span><br><span class="line">	</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span> ; i &lt;= n ; i ++)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="type">int</span> x;</span><br><span class="line">		cin &gt;&gt; x;</span><br><span class="line">		</span><br><span class="line">		number[i] = l.<span class="built_in">insert</span>(number[x] , i); <span class="comment">//插入函数</span></span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	<span class="built_in">reverse</span>(l.<span class="built_in">begin</span>() , l.<span class="built_in">end</span>()); <span class="comment">//翻转</span></span><br><span class="line">	</span><br><span class="line">	<span class="keyword">for</span>(list &lt;<span class="type">int</span>&gt; :: iterator it = l.<span class="built_in">begin</span>() ; it != l.<span class="built_in">end</span>() ; it ++) <span class="comment">// 迭代器</span></span><br><span class="line">	&#123;</span><br><span class="line">		cout &lt;&lt; *it &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>洛谷题解</category>
      </categories>
      <tags>
        <tag>题解</tag>
      </tags>
  </entry>
  <entry>
    <title>P10676 『STA - R6』b20</title>
    <url>/article/sol-P10676/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h3><p>题目传送门：<a href="/problem/P10676">P10676 『STA - R6』b20</a>。</p>
<p>简单模拟题。</p>
<h3 id="Analysis"><a href="#Analysis" class="headerlink" title="Analysis"></a>Analysis</h3><p>给定一个字符串（网站名称）和一个整数（粉丝数），输出网站名称的<strong>第一位</strong>，和这个整数。</p>
<p>方便起见都做成 $\operatorname{string}$，输出 $s_0\ ^{[1]}$ 和 $s1\ ^{[2]}$ 即可。</p>
<ul>
<li>$^{[1]}$ 指网站名称的第一位，下表从 $0$ 开始。</li>
<li>$^{[2]}$ 指粉丝数，方便做成字符串。</li>
</ul>
<p>注意输出<strong>不用带空格</strong>。</p>
<h3 id="Code"><a href="#Code" class="headerlink" title="Code"></a>Code</h3><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	string s; <span class="comment">//网站名称</span></span><br><span class="line">	string s1;<span class="comment">//粉丝数量</span></span><br><span class="line">	</span><br><span class="line">	cin &gt;&gt; s &gt;&gt; s1;</span><br><span class="line">	cout &lt;&lt; s[<span class="number">0</span>] &lt;&lt; s1;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>洛谷题解</category>
      </categories>
      <tags>
        <tag>题解</tag>
      </tags>
  </entry>
  <entry>
    <title>P10532 [XJTUPC2024] 筛法</title>
    <url>/article/sol-P10532/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h3><p>题目传送门：<a href="/problem/P10532">P10532 [XJTUPC2024] 筛法</a></p>
<p>求：</p>
<script type="math/tex; mode=display">
\sum\limits_{i=1}^n\sum\limits_{j=1}^n\lfloor \dfrac{n}{\max(i,j)}\rfloor [i \perp j]</script><p>显然发现答案为 $n^2$。</p>
<h3 id="Analysis（转自讲评视频）"><a href="#Analysis（转自讲评视频）" class="headerlink" title="Analysis（转自讲评视频）"></a>Analysis（转自讲评视频）</h3><p>我们可以从几何的角度出发:</p>
<p>考虑二维平面的 $n^2$ 个点 $(i,j)\ 1\le i,j\le n$。</p>
<p>从原点向每个满足 $i\perp j$ 的点 $(i,j)$ 引出一条射线，可以发现这 $n^2$ 个点均唯一存在于其中一条射线上，应为当 $\gcd(i,j)\not=1$ 时，$(i,j)$ 会被 $(\frac{i}{\gcd{(i,j)}},\frac{j}{\gcd{(i,j)}})$ 引出的射线覆盖。</p>
<p>我们再对每个 $i\perp j$ 的点对 $(i,j)$ 考虑其引出射线覆盖的点数，不难发现恰好就是 $\frac{n}{\max{(i,j)}}$，因为对所有 $1\le k\le \frac{n}{\max{(i,j)}}$，点对 $(ik,jk)$ 在这条射线上，当 $k$ 再大时 $ik,jk$ 中至少有一维超过 $n$。</p>
<p>故</p>
<script type="math/tex; mode=display">\sum_{i=1}^{n}\sum_{j=1}^{n}[i\perp j][\frac{n}{\max{(i,j)}}]</script><p>可以理解为对所有互质的 $(i,j)$ 求上述射线所覆盖的点对数量，在上述结论中可知该和为 ${n}^{2}$。</p>
<p>还有几种解法不说了，可以自行去看<a href="https://www.bilibili.com/video/BV1t1421B7qq/">讲评回放</a>。</p>
<h3 id="Code"><a href="#Code" class="headerlink" title="Code"></a>Code</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">x = <span class="built_in">int</span>(<span class="built_in">input</span>())</span><br><span class="line"><span class="built_in">print</span>(x * x)</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>洛谷题解</category>
      </categories>
      <tags>
        <tag>题解</tag>
      </tags>
  </entry>
  <entry>
    <title>P10462 Number Base Conversion</title>
    <url>/article/sol-P10462/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h3><p>题目传送门：<a href="/problem/P10462">P10462 Number Base Conversion</a>。</p>
<p>直接套板子。</p>
<h3 id="Analysis"><a href="#Analysis" class="headerlink" title="Analysis"></a>Analysis</h3><p>模拟，记得开 <code>long long</code>。</p>
<h4 id="mathbb-n-进制转十进制："><a href="#mathbb-n-进制转十进制：" class="headerlink" title="$\mathbb{n}$ 进制转十进制："></a>$\mathbb{n}$ 进制转十进制：</h4><p>套 c 语言库函数 <code>strtol</code>，该函数原型为 <code>long int strtol(const char *str, char **endptr, int base)</code>。其作用是将 $\mathcal str$ 转换成 $10$ 进制。</p>
<h4 id="十进制转-mathbb-n-进制："><a href="#十进制转-mathbb-n-进制：" class="headerlink" title="十进制转 $\mathbb{n}$ 进制："></a>十进制转 $\mathbb{n}$ 进制：</h4><p>短除法，用基数 $n$ 去除，直到商为 $0$，逆序输出。</p>
<p>以 $114514$ 转 $16$ 进制举例：</p>
<script type="math/tex; mode=display">16{\big|}\kern{3px}114514\kern{-35px}\raisebox{-2px}{\underline{\kern{40px}}}\\
\kern{32px}16{\big|}\kern{7px}7157\kern{-28px}\raisebox{-2px}{\underline{\kern{35px}}}\kern{5px}\cdots\kern{5px}2\\
\kern{36px}16{\big|}\kern{7px}447\kern{-23px}\raisebox{-2px}{\underline{\kern{31px}}}\kern{6px}\cdots\kern{5px}5\\
\kern{60px}16{\big|}\kern{7px}27\kern{-19px}\raisebox{-2px}{\underline{\kern{27px}}}\kern{6px}\cdots\kern{5px}15(\text F)\\
\kern{84px}1\kern{15px}\cdots\kern{5px}11(\text B)\\
(114514)_{10} = (BF52)_{16}</script><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> int long long</span></span><br><span class="line"><span class="function">string <span class="title">zhuanhuan</span><span class="params">(<span class="type">int</span> number , <span class="type">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	string ans;</span><br><span class="line">	</span><br><span class="line">	<span class="keyword">while</span>(number)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">if</span>(number % n &gt;= <span class="number">10</span>)</span><br><span class="line">		&#123;</span><br><span class="line">			ans += <span class="built_in">char</span>(number % n + <span class="string">&#x27;A&#x27;</span> - <span class="number">10</span>);</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">else</span></span><br><span class="line">		&#123;</span><br><span class="line">			ans += <span class="built_in">char</span>(number % n + <span class="string">&#x27;0&#x27;</span>);</span><br><span class="line">		&#125;</span><br><span class="line">		number /= n;</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	<span class="built_in">reverse</span>(ans.<span class="built_in">begin</span>() , ans.<span class="built_in">end</span>());</span><br><span class="line">	<span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="Code"><a href="#Code" class="headerlink" title="Code"></a>Code</h3><p>拼接上面代码+根据题目模拟即可。</p>
]]></content>
      <categories>
        <category>洛谷题解</category>
      </categories>
      <tags>
        <tag>题解</tag>
      </tags>
  </entry>
  <entry>
    <title>P10692 [SNCPC2024] 表达式矩阵</title>
    <url>/article/sol-P10692/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h3><p>题目传送门：<a href="/problem/P10692">P10692 [SNCPC2024] 表达式矩阵</a>。</p>
<p>构造一个 $n \times m$ 的矩阵，其中每个位置要么是 $1$，要么是 $\tt +$ 或者 $\tt ∗$，使得在满足每一行每一列均为一个合法表达式的前提下，最小化每一行、每一列表达式的值之和。</p>
<h3 id="Analysis（转自官方题解）"><a href="#Analysis（转自官方题解）" class="headerlink" title="Analysis（转自官方题解）"></a>Analysis（转自官方题解）</h3><ul>
<li>对于行列大小均为偶数的情况，以 $6\times 8$ 为例答案形如:<br><img src="https://cdn.zhaohonghao-qwq.com/img/image.2krspnku4c.webp" alt=""></li>
</ul>
<p>注意到每行 $/$ 每列恰有一个 $11$。由于无法构造出只含 $1$ 的解，显然使用乘号连接 $11$ 和 $1$ 是最优的。</p>
<ul>
<li>对于列大小为奇数的情况，以 $6 × 9$ 为例如：</li>
</ul>
<p><img src="https://cdn.zhaohonghao-qwq.com/img/image.wifsgkyuy.webp" alt=""></p>
<p>所有包含两个 $11$ 的行都必须使用一个 $+$，否则会产生 $11 \times 11$ 的结果，这是我们不能接受的。</p>
<p>同时，除此之外每多使用一个 $+$，都会使答案增加，所以只需要在这些行中选恰好一个运算符改为 $+$ 即可。</p>
<p>行大小为奇数的情况类似。</p>
<ul>
<li>对于行列大小均为奇数的情况，以 $7 × 9$ 为例：<br><img src="https://cdn.zhaohonghao-qwq.com/img/image.1e8hh1qpt8.webp" alt=""></li>
</ul>
<p>所有包含两个 $11$ 的行都必须使用一个 $+$，所有包含两个 $11$ 的列都必须使用一个 $+$。</p>
<p>如图所示，观察位于交点的六个运算符，需要保证每行都有一个 $+$，每列都有一个 $+$。可以考虑斜着分配。</p>
<p>通过搜索和合理的剪枝，能在可接受的时间内算出答案。</p>
<p>考虑答案空间只有 $9 × 9$，可以搜出所有的答案硬编写在代码中。</p>
]]></content>
      <categories>
        <category>洛谷题解</category>
      </categories>
      <tags>
        <tag>题解</tag>
      </tags>
  </entry>
  <entry>
    <title>P7012 [CERC2013] Draughts</title>
    <url>/article/sol-P7012/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h3><p>题目传送门：<a href="/problem/P7012">P7012 [CERC2013] Draughts</a>。</p>
<p>简单回溯题目，你操作白棋，判断白棋最多能吃几个敌方的棋。</p>
<h3 id="Analysis"><a href="#Analysis" class="headerlink" title="Analysis"></a>Analysis</h3><p>考虑 $n\le10$，直接爆搜（回溯）。</p>
<p>分类讨论：</p>
<ul>
<li><p>字符 $\tt #$ 和 $\tt .$ 表示空的黑色和白色方块，$\tt W$ 表示有浅色棋子的方块，$\tt B$ 表示有深色棋子的方块。</p>
</li>
<li><p>增量数组：</p>
  <figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="type">const</span> <span class="type">int</span> dx[<span class="number">4</span>] = &#123;<span class="number">-2</span>,<span class="number">-2</span>,<span class="number">2</span>,<span class="number">2</span>&#125;;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> dy[<span class="number">4</span>] = &#123;<span class="number">-2</span>,<span class="number">2</span>,<span class="number">2</span>,<span class="number">-2</span>&#125;;</span><br></pre></td></tr></table></figure></li>
<li><p><strong>多组测试数据记得复原</strong>。</p>
</li>
<li><p>记得<strong>回溯</strong>。</p>
</li>
<li><p>找到每一个浅色棋子，去看它旁边有没有深色棋子。</p>
</li>
<li><p>记得找最大值，没有白棋输出 $-1$。</p>
</li>
</ul>
<p>时间复杂度 $\mathcal{O}(n^2)$。</p>
]]></content>
      <categories>
        <category>洛谷题解</category>
      </categories>
      <tags>
        <tag>题解</tag>
      </tags>
  </entry>
  <entry>
    <title>「EPXLQ 2024」银辉描淡的石桥</title>
    <url>/article/%E3%80%8CEPXLQ%202024%E3%80%8D/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h3><p>题目传送门：<a href="/problem/T460119">「EPXLQ 2024」银辉描淡的石桥</a>。</p>
<p>排序后计算 $\text{rank}$ 后输出即可。在此之前，可以先完成<a href="/problem/B3968">此题</a>。</p>
<h3 id="Analysis"><a href="#Analysis" class="headerlink" title="Analysis"></a>Analysis</h3><ul>
<li>先来解决输出 <code>Hahahai!</code> 的问题。</li>
</ul>
<p>定义变量 $flag$，先设置为都相同（<code>true</code>），在定义 $front$ 变量取头数据。后面输入时比较，如果发现不同的数据后，设 $flag$ 为 <code>false</code>。</p>
<p>判断部分代码如下：<br><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span>(a[i].score != front)</span><br><span class="line">&#123;</span><br><span class="line">	flag = <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<ul>
<li>再来解决排序的问题。</li>
</ul>
<p>先定义结构体，有两个参数：编号和成绩。接下来输入边输边存编号 <code>a[i].number = i</code>，后面写好自定义排序，定义映射类型（<del>主打一个方便</del>）的变量存 $\text{rank}$ 后输出即可。</p>
<p>存 $\text{rank}$ 的代码如下：<br><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span> ; i &lt;= n ; i ++)</span><br><span class="line">&#123;</span><br><span class="line">	Rank[a[i].number] = i;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>解释一下就是 $Rank[$ 这个人的学号 $]=$ 这个人的名次（$a$ 已经从大到小排过序）。</p>
<h3 id="Code"><a href="#Code" class="headerlink" title="Code"></a>Code</h3><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">node</span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="type">int</span> score;</span><br><span class="line">	<span class="type">int</span> number;</span><br><span class="line">&#125;a[<span class="number">100001</span>];</span><br><span class="line"></span><br><span class="line">map &lt;<span class="type">int</span> , <span class="type">int</span>&gt; Rank;</span><br><span class="line"><span class="type">bool</span> flag = <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">cmp</span><span class="params">(node x , node y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">return</span> x.score &gt; y.score;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="type">int</span> n;</span><br><span class="line">	cin &gt;&gt; n;</span><br><span class="line">	</span><br><span class="line">	cin &gt;&gt; a[<span class="number">1</span>].score;</span><br><span class="line">	a[<span class="number">1</span>].number = <span class="number">1</span>;</span><br><span class="line">	<span class="type">int</span> front = a[<span class="number">1</span>].score;</span><br><span class="line">	</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">2</span> ; i &lt;= n ; i ++)</span><br><span class="line">	&#123;</span><br><span class="line">		cin &gt;&gt; a[i].score;</span><br><span class="line">		a[i].number = i;</span><br><span class="line">		</span><br><span class="line">		<span class="keyword">if</span>(a[i].score != front)</span><br><span class="line">		&#123;</span><br><span class="line">			flag = <span class="literal">false</span>;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	<span class="keyword">if</span>(flag)</span><br><span class="line">	&#123;</span><br><span class="line">		cout &lt;&lt; <span class="string">&quot;Hahahai!&quot;</span>;</span><br><span class="line">		<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	<span class="built_in">sort</span>(a + <span class="number">1</span> , a + n + <span class="number">1</span> , cmp);</span><br><span class="line">	</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span> ; i &lt;= n ; i ++)</span><br><span class="line">	&#123;</span><br><span class="line">		Rank[a[i].number] = i;</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	<span class="keyword">for</span>(map &lt;<span class="type">int</span> , <span class="type">int</span>&gt; :: iterator it = Rank.<span class="built_in">begin</span>() ; it != Rank.<span class="built_in">end</span>() ; it ++)</span><br><span class="line">	&#123;</span><br><span class="line">		cout &lt;&lt; it-&gt;second &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>个人记录</category>
      </categories>
      <tags>
        <tag>题解</tag>
      </tags>
  </entry>
</search>
